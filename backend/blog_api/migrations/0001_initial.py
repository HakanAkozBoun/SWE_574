# Generated by Django 3.2.16 on 2024-04-23 13:02

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=255)),
                ('excerpt', models.CharField(default='', max_length=255)),
                ('content', models.TextField(blank=True, null=True)),
                ('contentTwo', models.TextField(blank=True, null=True)),
                ('preparationtime', models.TextField(blank=True, null=True)),
                ('cookingtime', models.TextField(blank=True, null=True)),
                ('avg_rating', models.FloatField(default=0)),
                ('image', models.ImageField(blank=True, null=True, upload_to='image')),
                ('ingredients', models.TextField(blank=True, null=True)),
                ('postlabel', models.CharField(blank=True, choices=[('POPULAR', 'Popular')], max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('image', models.ImageField(blank=True, null=True, upload_to='image')),
            ],
        ),
        migrations.CreateModel(
            name='comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blog', models.IntegerField()),
                ('user', models.IntegerField()),
                ('text', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='food',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('unit', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='FoodTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fdc_id', models.IntegerField()),
                ('data_type', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('food_category_id', models.CharField(blank=True, max_length=255, null=True)),
                ('publication_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='FoundationFood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fdc_id', models.IntegerField()),
                ('NDB_number', models.IntegerField()),
                ('footnote', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='InputFood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fdc_id', models.IntegerField(blank=True, null=True)),
                ('seq_num', models.IntegerField(blank=True, null=True)),
                ('amount', models.FloatField(blank=True, null=True)),
                ('sr_description', models.CharField(blank=True, max_length=255, null=True)),
                ('unit', models.CharField(blank=True, max_length=255, null=True)),
                ('portion_description', models.CharField(blank=True, max_length=255, null=True)),
                ('gram_weight', models.FloatField(blank=True, null=True)),
                ('retention_code', models.CharField(blank=True, max_length=255, null=True)),
                ('survey_flag', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='nutrition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calorie', models.FloatField()),
                ('fat', models.FloatField()),
                ('sodium', models.FloatField()),
                ('calcium', models.FloatField()),
                ('protein', models.FloatField()),
                ('iron', models.FloatField()),
                ('carbonhydrates', models.FloatField()),
                ('food', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('food', models.IntegerField()),
                ('unit', models.IntegerField()),
                ('amount', models.FloatField()),
                ('blog', models.IntegerField()),
                ('metricamount', models.IntegerField()),
                ('metricunit', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='SampleFood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fdc_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='unitconversion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imperial', models.FloatField()),
                ('metric', models.FloatField()),
                ('mvalue', models.FloatField()),
                ('ivalue', models.FloatField()),
                ('unittype', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='unititem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imperial', models.CharField(max_length=255)),
                ('metric', models.CharField(max_length=255)),
                ('unit', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='unittype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='UserRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog_api.blog')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.IntegerField()),
                ('weight', models.FloatField()),
                ('height', models.FloatField()),
                ('description', models.CharField(max_length=255)),
                ('image', models.ImageField(blank=True, null=True, upload_to='image')),
                ('experience', models.IntegerField()),
                ('story', models.TextField(blank=True, null=True)),
                ('diet_goals', models.CharField(blank=True, max_length=255, null=True)),
                ('gender', models.CharField(blank=True, max_length=255, null=True)),
                ('graduated_from', models.CharField(blank=True, max_length=255, null=True)),
                ('cuisines_of_expertise', models.CharField(blank=True, max_length=255, null=True)),
                ('working_at', models.CharField(blank=True, max_length=255, null=True)),
                ('food_allergies', models.ManyToManyField(blank=True, related_name='allergic_users', to='blog_api.InputFood')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserBookmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog_api.blog')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='blog',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='blog_api.category'),
        ),
    ]
